# -*- mode: ruby -*-
# vi: set ft=ruby :
################################################################################
# Ubuntu Server
################################################################################

VAGRANTFILE_API_VERSION = '2'.freeze
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.synced_folder "D:/Arquivos/devops/cursos_ubuntu_server/ubuntuserver/share", "/home/vagrant/share", nfs:true
  config.vm.box = 'ubuntu/xenial64'

  config.vm.define :firewall01 do |firewall01_config|
    firewall01_config.vm.hostname = 'firewall'
    config.vm.network "private_network", virtualbox__intnet: "intnet"
    config.vm.network "private_network", virtualbox__intnet: "intnet"
    # firewall01_config.vm.network :private_network, ip: '10.10.10.1'
    # firewall01_config.vm.network :private_network, ip: '10.10.10.2'
    # Sobe com duas interfaces de rede ativas. xse comentado Ã© porque vou tentar subir sem
    # firewall01_config.vm.network :private_network, virtualbox__intnet: true
    # firewall01_config.vm.network :private_network, virtualbox__intnet: true
    # firewall01_config.vm.provision :shell, path: "boot.sh"
      config.vm.provider "virtualbox" do |v|
        #v.memory = 3000
        #v.cpus = 1
        v.name = "firewall01"
      end
    # firewall01_config.vm.network "forwarded_port", guest: 9200, host: 9200 # ES
    # firewall01_config.vm.network "forwarded_port", guest: 5601, host: 5601 # Kibana
    # kibana01_config.vm.network "forwarded_port", guest: 8111, host: 8112 # HTTP server for test
    # kibana01_config.vm.network "forwarded_port", guest: 5044, host: 5044 # logstash
    end
end
